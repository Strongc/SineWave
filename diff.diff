diff --git a/src/com/kangear/sinewave/WaveService.java b/src/com/kangear/sinewave/WaveService.java
index 3665c11..d4f52c3 100644
--- a/src/com/kangear/sinewave/WaveService.java
+++ b/src/com/kangear/sinewave/WaveService.java
@@ -2,7 +2,11 @@ package com.kangear.sinewave;
 
 import java.util.ArrayList;
 
+import android.util.Log;
+
 public class WaveService {
+	private String LOG_TAG = "WaveService";
+	private boolean mDebug = true;
     private final int duration = 10; // seconds
     private final int sampleRate = 44100;
     private int numSamples = duration * sampleRate;
@@ -70,10 +74,10 @@ public class WaveService {
     private final float    INFRARED_NES_STOPBIT_HIGH_WIDTH = 0.56f ;
     
     
-    byte[] getHigh() {
-    	//0.56ms + (1.125 - 0.56)
-    	//INFRARED_NEC_1_HIGH_WIDTH  0.56
-    	//INFRARED_NEC_1_LOW_WIDTH   0.565 // 1.125 - 0.56
+    byte[] getLow() {
+    	//(1.125-0.56) + 0.56
+    	//INFRARED_NEC_0_HIGH_WIDTH  1.69 // 2.25 - 0.56
+    	//INFRARED_NEC_0_LOW_WIDTH   0.56
     	byte[] one = genTone(0.56, 1);
     	byte[] two = genTone(1.125-0.56, 0);
     	byte[] combined = new byte[one.length + two.length];
@@ -83,12 +87,12 @@ public class WaveService {
     	return combined;
     }
     
-    byte[] getLow() {
-    	//(2.25-0.56) + 0.56
-    	//INFRARED_NEC_0_HIGH_WIDTH  1.69 // 2.25 - 0.56
-    	//INFRARED_NEC_0_LOW_WIDTH   0.56
-    	byte[] one = genTone(2.25 - 0.56, 1);
-    	byte[] two = genTone(0.56, 0);
+    byte[] getHigh() {
+    	//0.56ms + (2.25 - 0.56)
+    	//INFRARED_NEC_1_HIGH_WIDTH  0.56
+    	//INFRARED_NEC_1_LOW_WIDTH   0.565 // 1.125 - 0.56
+    	byte[] one = genTone(0.56, 1);
+    	byte[] two = genTone(2.25-0.56, 0);
     	byte[] combined = new byte[one.length + two.length];
 
     	System.arraycopy(one,0,combined,0         ,one.length);
@@ -100,6 +104,8 @@ public class WaveService {
     
     //                   0x0707         0x05
     byte[] getWave(short userCode, byte dataCode) {
+    	if(mDebug) Log.d(LOG_TAG, "userCode = 0x" + Integer.toHexString(userCode) + " dataCode = 0x" + Integer.toHexString(dataCode));
+    	
     	ArrayList<byte[]> wave_list = new ArrayList<byte[]>();
     	int totalLength = 0;
     	
@@ -148,13 +154,13 @@ public class WaveService {
     	ArrayList<byte[]> wave_list = new ArrayList<byte[]>();
     	int totalLength = 0;
     	
-    	for(int i=0; i<16; ++i) {
+    	for(int i=15; i>=0; --i) {             // 取最高位
     		if(((userCode >> i) & 0x1) == 1) { // 1
     			wave_list.add(getHigh());
     		} else {                           // 0
     			wave_list.add(getLow());
     		}
-    		totalLength += wave_list.get(i).length;	
+    		totalLength += wave_list.get(15-i).length;	
     	}
     	
     	int currentPosition = 0;
@@ -175,29 +181,39 @@ public class WaveService {
     byte[] getDataCodeToWave(byte dataCode) {
     	ArrayList<byte[]> wave_list = new ArrayList<byte[]>();
     	int totalLength = 0;
+//    	                                       // 取最高位
+//    	for(int i=7; i>=0; --i) {              // sign-and-magnitude
+//    		if(((dataCode >> i) & 0x1) == 1) { // 1
+//    			wave_list.add(getHigh());
+//    		} else {                           // 0
+//    			wave_list.add(getLow());
+//    		}
+//    		totalLength += wave_list.get(7-i).length;	
+//    	}
     	
-    	for(int i=0; i<8; ++i) {               // sign-and-magnitude
-    		if(((dataCode >> i) & 0x1) == 1) { // 1
-    			wave_list.add(getHigh());
-    		} else {                           // 0
-    			wave_list.add(getLow());
-    		}
-    		totalLength += wave_list.get(i).length;	
-    	}
-    	
-    	for(int i=0; i<8; ++i) {               // ones'complement
+    	for(int i=7; i>=0; --i) {              // sign-and-magnitude
     		if(((dataCode >> i) & 0x1) == 1) { // 1
     			wave_list.add(getLow());
     		} else {                           // 0
     			wave_list.add(getHigh());
     		}
-    		totalLength += wave_list.get(i).length;	
+    		totalLength += wave_list.get(7-i).length;	
     	}
+//    	                                       // 取最高位
+//    	for(int i=7; i>=0; --i) {              // ones'complement
+//    		if(((dataCode >> i) & 0x1) == 1) { // 1
+//    			wave_list.add(getLow());
+//    		} else {                           // 0
+//    			wave_list.add(getHigh());
+//    		}
+//    		totalLength += wave_list.get(7-i).length;	
+//    	}
     	
     	int currentPosition = 0;
     	byte userCodeWaveArray[] = new byte[totalLength];
-
+    	Log.i(LOG_TAG, "" + totalLength);
     	for(byte[] byteArray : wave_list) {
+    		Log.i(LOG_TAG, "length:" + byteArray.length);
     		System.arraycopy(byteArray,0,userCodeWaveArray,currentPosition        ,byteArray.length);
     		currentPosition += byteArray.length;
     	}
